# ðŸ“Š Eksplorasi & Pembersihan Outlier dengan Metode IQR
======================================================

# 1. Import library
------------------------------------------------------
```python
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# 2. Baca Dataset (FOrmat CSV)
------------------------------------------------------
Membaca file CSV dengan semicolon (;) sebagai pemisah dan koma (,) sebagai desimal
df = pd.read_csv("TGM 2020-2023_eng.csv", sep=';', decimal=',', na_values='N/A')

# 3. Inspeksi awal dan Pra-pemrosesan
------------------------------------------------------
print("=== Info dataset ===")
print(df.info())

print("\n=== Contoh data awal ===")
print(df.head())

print("\n=== Descriptive statistics ===")
print(df.describe())

print("\n=== Jumlah nilai kosong tiap kolom ===")
print(df.isnull().sum())

# Menghapus baris yang memiliki nilai kosong pada kolom numerik penting
# agar proses IQR tidak error
df.dropna(subset=[
    'Reading Frequency per week', 'Number of Readings per Quarter',
    'Daily Reading Duration (in minutes)', 'Internet Access Frequency per Week',
    'Daily Internet Duration (in minutes)', 'Tingkat Kegemaran Membaca (Reading Interest)'
], inplace=True)

# 4. Identifikasi kolom numerik
------------------------------------------------------
num_cols = df.select_dtypes(include=[np.number]).columns.tolist()
# Kolom 'Year' tidak diikutkan dalam analisis outlier
num_cols.remove('Year')

print("\n=== Kolom numerik yang akan dibersihkan ===")
print(num_cols)

# 5. Deteksi & pembersihan outlier dengan IQR
------------------------------------------------------
def remove_outliers_iqr(data, cols):
    df_clean = data.copy()
    outlier_indices = []

    for col in cols:
        Q1 = df_clean[col].quantile(0.25)
        Q3 = df_clean[col].quantile(0.75)
        IQR = Q3 - Q1
        lower_bound = Q1 - 1.5 * IQR
        upper_bound = Q3 + 1.5 * IQR

        # Kumpulkan indeks dari outlier
        col_outlier_indices = df_clean[(df_clean[col] < lower_bound) | (df_clean[col] > upper_bound)].index
        outlier_indices.extend(col_outlier_indices)
    
    # Hapus semua baris outlier yang unik
    df_clean = df_clean.drop(index=list(set(outlier_indices)))
    return df_clean

df_clean = remove_outliers_iqr(df, num_cols)

print(f"\nUkuran sebelum: {df.shape}, sesudah: {df_clean.shape}")

# 6. Simpan dataset bersih
------------------------------------------------------
# Menyimpan ke format Excel
df_clean.to_excel("data_bersih_IQR.xlsx", index=False)
print("\nâœ… Dataset bersih disimpan sebagai data_bersih_IQR.xlsx")

# Menyimpan ke format CSV asli (semicolon separator, comma decimal)
df_clean.to_csv("data_bersih_format_asli.csv", index=False, sep=';', decimal=',')
print("âœ… Dataset bersih disimpan sebagai data_bersih_format_asli.csv")

# 7. Visualisasi Boxplot sebelum & sesudah pembersihan
------------------------------------------------------
for col in num_cols:
    plt.figure(figsize=(10, 5))

    # Boxplot sebelum
    plt.subplot(1, 2, 1)
    sns.boxplot(y=df[col])
    plt.title(f"Before - {col}")

    # Boxplot sesudah
    plt.subplot(1, 2, 2)
    sns.boxplot(y=df_clean[col])
    plt.title(f"After - {col}")

    plt.tight_layout()
    plt.show()
